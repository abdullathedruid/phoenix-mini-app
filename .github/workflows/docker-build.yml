name: Build and push Docker image

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image name and tags
        id: meta
        run: |
          set -euo pipefail
          REPO_LC="$(echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')"
          SHORT_SHA="${GITHUB_SHA::7}"
          AUTHOR_RAW="${{ github.event.head_commit.author.name || github.actor }}"
          BUILD_TIME="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          echo "image=${REPO_LC}" >> "$GITHUB_OUTPUT"
          echo "tag_latest=latest" >> "$GITHUB_OUTPUT"
          echo "tag_sha=sha-${SHORT_SHA}" >> "$GITHUB_OUTPUT"
          echo "build_time=${BUILD_TIME}" >> "$GITHUB_OUTPUT"
          echo "git_sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
          echo "git_author=${AUTHOR_RAW}" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag_latest }}
            ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag_sha }}
          build-args: |
            GIT_SHA="${{ steps.meta.outputs.git_sha }}"
            GIT_AUTHOR="${{ steps.meta.outputs.git_author }}"
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.build_time }}


